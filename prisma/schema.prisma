generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       BigInt @id
  name     String @db.VarChar(30)
  email    String @db.VarChar(30)
  passHash String @map("pass_hash") @db.VarChar(70)

  sessions Session[]
  accounts Account[]

  @@map("users")
}

model Account {
  id                String  @id(length: 30) @default(cuid())
  userId            BigInt  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @unique(length: 30) @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @map("session_token") @db.VarChar(70)
  userId       BigInt   @map("user_id")
  expires      DateTime @db.Timestamp(0)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model EloUpdate {
  id     BigInt   @id
  userId BigInt   @map("user_id")
  oldElo Int      @map("old_elo")
  newElo Int      @map("new_elo")
  time   DateTime @default(now()) @db.Timestamp(0)

  @@map("elo_updates")
}

model Game {
  id           BigInt @id
  player1Id    BigInt @map("player1_id")
  player2Id    BigInt @map("player2_id")
  player1Score Int    @map("player1_score")
  player2Score Int    @map("player2_score")

  @@map("games")
}
